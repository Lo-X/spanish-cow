imports:
    - { resource: parameters.yaml }

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    ######################################################################
    ## DATA PROVIDERS
    ######################################################################
    App\DataProvider\ProjectCollectionProvider:
        tags: ['api_platform.collection_data_provider']
        arguments:
            $extensions: !tagged api_platform.doctrine.orm.query_extension.collection

    App\DataProvider\DomainCollectionProvider:
        tags: ['api_platform.collection_data_provider']
        arguments:
            $extensions: !tagged api_platform.doctrine.orm.query_extension.collection

    App\DataProvider\LocaleCollectionProvider:
        tags: ['api_platform.collection_data_provider']
        arguments:
            $extensions: !tagged api_platform.doctrine.orm.query_extension.collection

    App\DataProvider\AssetCollectionProvider:
        tags: ['api_platform.collection_data_provider']
        arguments:
            $extensions: !tagged api_platform.doctrine.orm.query_extension.collection

    App\DataProvider\TranslationCollectionProvider:
        tags: ['api_platform.collection_data_provider']
        arguments:
            $extensions: !tagged api_platform.doctrine.orm.query_extension.collection

    ######################################################################
    ## DATA PERSISTER
    ######################################################################
    App\DataPersister\ProjectPersister:
        tags: ['api_platform.data_persister']

    ######################################################################
    ## MANAGERS
    ######################################################################
    App\Manager\UserManager:
        arguments:
            $class: 'App\Entity\User'

    App\Manager\ProjectManager:
        arguments:
            $class: 'App\Entity\Project'

    App\Manager\DomainManager:
        arguments:
            $class: 'App\Entity\Domain'

    App\Manager\LocaleManager:
        arguments:
            $class: 'App\Entity\Locale'

    App\Manager\AssetManager:
        arguments:
            $class: 'App\Entity\Asset'

    App\Manager\TranslationManager:
        arguments:
            $class: 'App\Entity\Translation'

    ######################################################################
    ## CONSUMERS
    ######################################################################
    App\Consumer\FileImportConsumer:
        public: true
        tags:
            - { name: 'enqueue.client.processor' }

    App\Importer\FileImporter:
        arguments:
            $translationWriter: '@translation.writer'